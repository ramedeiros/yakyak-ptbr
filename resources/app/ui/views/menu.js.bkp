(function() {
  var Menu, remote, templateOsx, templateOthers;

  remote = require('remote');

  Menu = remote.require('menu');

  templateOsx = function(viewstate) {
    return [
      {
        label: 'YakYak',
        submenu: [
          {
            label: 'About YakYak',
            selector: 'orderFrontStandardAboutPanel:'
          }, {
            type: 'separator'
          }, {
            type: 'separator'
          }, {
            label: 'Hide YakYak',
            accelerator: 'Command+H',
            selector: 'hide:'
          }, {
            label: 'Hide Others',
            accelerator: 'Command+Shift+H',
            selector: 'hideOtherApplications:'
          }, {
            label: 'Show All',
            selector: 'unhideAllApplications:'
          }, {
            type: 'separator'
          }, {
            label: 'Open Inspector',
            accelerator: 'Command+Alt+I',
            click: function() {
              return action('devtools');
            }
          }, {
            type: 'separator'
          }, {
            label: 'Logout',
            click: function() {
              return action('logout');
            },
            enabled: viewstate.loggedin
          }, {
            label: 'Quit',
            accelerator: 'Command+Q',
            click: function() {
              return action('quit');
            }
          }
        ]
      }, {
        label: 'Edit',
        submenu: [
          {
            label: 'Undo',
            accelerator: 'Command+Z',
            selector: 'undo:'
          }, {
            label: 'Redo',
            accelerator: 'Command+Shift+Z',
            selector: 'redo:'
          }, {
            type: 'separator'
          }, {
            label: 'Cut',
            accelerator: 'Command+X',
            selector: 'cut:'
          }, {
            label: 'Copy',
            accelerator: 'Command+C',
            selector: 'copy:'
          }, {
            label: 'Paste',
            accelerator: 'Command+V',
            selector: 'paste:'
          }, {
            label: 'Select All',
            accelerator: 'Command+A',
            selector: 'selectAll:'
          }
        ]
      }, {
        label: 'View',
        submenu: [
          {
            type: 'checkbox',
            label: 'Show Conversation Thumbnails',
            checked: viewstate.showConvThumbs,
            enabled: viewstate.loggedin,
            click: function(it) {
              return action('showconvthumbs', it.checked);
            }
          }, {
            label: 'Toggle Full Screen',
            accelerator: 'Command+Control+F',
            click: function() {
              return action('togglefullscreen');
            }
          }, {
            label: 'Zoom In',
            accelerator: 'Command+Plus',
            click: function() {
              return action('zoom', +0.25);
            }
          }, {
            label: 'Zoom Out',
            accelerator: 'Command+-',
            click: function() {
              return action('zoom', -0.25);
            }
          }, {
            label: 'Reset Zoom',
            accelerator: 'Command+0',
            click: function() {
              return action('zoom');
            }
          }, {
            type: 'separator'
          }, {
            label: 'Previous Conversation',
            enabled: viewstate.loggedin,
            click: function() {
              return action('selectNextConv', -1);
            }
          }, {
            label: 'Next Conversation',
            enabled: viewstate.loggedin,
            click: function() {
              return action('selectNextConv', +1);
            }
          }, {
            type: 'separator'
          }, {
            label: 'Theme',
            submenu: [
              {
                label: 'Light Theme',
                type: 'checkbox',
                checked: viewstate.theme === 'light-theme',
                click: function() {
                  return action('toggletheme', 'light-theme');
                }
              }, {
                label: 'Dark Theme',
                type: 'checkbox',
                checked: viewstate.theme === 'dark-theme',
                click: function() {
                  return action('toggletheme', 'dark-theme');
                }
              }
            ]
          }, {
            label: 'Show tray icon',
            type: 'checkbox',
            enabled: !viewstate.hidedockicon,
            checked: viewstate.showtray,
            click: function() {
              return action('toggleshowtray');
            }
          }, {
            label: 'Hide Dock icon',
            type: 'checkbox',
            enabled: viewstate.showtray,
            checked: viewstate.hidedockicon,
            click: function() {
              return action('togglehidedockicon');
            }
          }
        ]
      }, {
        label: 'Window',
        submenu: [
          {
            label: 'Minimize',
            accelerator: 'Command+M',
            selector: 'performMiniaturize:'
          }, {
            label: 'Close',
            accelerator: 'Command+W',
            selector: 'performClose:'
          }, {
            type: 'separator'
          }, {
            label: 'Bring All to Front',
            selector: 'arrangeInFront:'
          }
        ]
      }
    ];
  };

  templateOthers = function(viewstate) {
    return [
      {
        label: 'YakYak',
        submenu: [
          {
            label: 'Open Inspector',
            accelerator: 'Control+Alt+I',
            click: function() {
              return action('devtools');
            }
          }, {
            type: 'separator'
          }, {
            type: 'separator'
          }, {
            label: 'Logout',
            click: function() {
              return action('logout');
            },
            enabled: viewstate.loggedin
          }, {
            label: 'Quit',
            accelerator: 'Control+Q',
            click: function() {
              return action('quit');
            }
          }
        ]
      }, {
        label: 'View',
        submenu: [
          {
            type: 'checkbox',
            label: 'Show Conversation Thumbnails',
            checked: viewstate.showConvThumbs,
            enabled: viewstate.loggedin,
            click: function(it) {
              return action('showconvthumbs', it.checked);
            }
          }, {
            label: 'Toggle Full Screen',
            accelerator: 'Control+Alt+F',
            click: function() {
              return action('togglefullscreen');
            }
          }, {
            label: 'Zoom In',
            accelerator: 'Control+Plus',
            click: function() {
              return action('zoom', +0.25);
            }
          }, {
            label: 'Zoom Out',
            accelerator: 'Control+-',
            click: function() {
              return action('zoom', -0.25);
            }
          }, {
            label: 'Reset Zoom',
            accelerator: 'Control+0',
            click: function() {
              return action('zoom');
            }
          }, {
            type: 'separator'
          }, {
            label: 'Previous Conversation',
            accelerator: 'Control+K',
            click: function() {
              return action('selectNextConv', -1);
            },
            enabled: viewstate.loggedin
          }, {
            label: 'Next Conversation',
            accelerator: 'Control+J',
            click: function() {
              return action('selectNextConv', +1);
            },
            enabled: viewstate.loggedin
          }, {
            type: 'separator'
          }, {
            label: 'Theme',
            submenu: [
              {
                label: 'Light Theme',
                type: 'checkbox',
                checked: viewstate.theme === 'light-theme',
                click: function() {
                  return action('toggletheme', 'light-theme');
                }
              }, {
                label: 'Dark Theme',
                type: 'checkbox',
                checked: viewstate.theme === 'dark-theme',
                click: function() {
                  return action('toggletheme', 'dark-theme');
                }
              }
            ]
          }, {
            label: 'Show tray icon',
            type: 'checkbox',
            enabled: !viewstate.hidedockicon,
            checked: viewstate.showtray,
            click: function() {
              return action('toggleshowtray');
            }
          }
        ]
      }
    ];
  };

  module.exports = function(viewstate) {
    if (require('os').platform() === 'darwin') {
      return Menu.setApplicationMenu(Menu.buildFromTemplate(templateOsx(viewstate)));
    } else {
      return Menu.setApplicationMenu(Menu.buildFromTemplate(templateOthers(viewstate)));
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,
